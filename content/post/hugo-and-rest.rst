---
title: "Hugo and reStructuredText"
author: "Alexander Carlton"
description: "Using reStructuredText in Hugo, and why."
date: "Sat Dec 30 09:58:38 PST 2017"
categories: [ "Demo" ]
tags: [ "Hugo", "reStructuredText", "markup" ]
weight: 1

---

Hugo and reStructuredText
#########################

Hugo supports reStructuredText as one of the
`additional formats
<https://gohugo.io/content-management/formats/#additional-formats-through-external-helpers>`__
for input markup.

OK.  So what?...

.. _pull-quote:

.. This is a comment, or what a comment looks like in reStructuredText.
   This comment is here to note that the line above is a link target
   for the link later in the text that references the pull quote just below.

.. pull-quote::

   Markup syntax that is readable and simple,
   yet powerful enough for non-trivial use.

   -- reStructuredText Documentation


reStructuredText Demo
*********************
 
.. figure:: Metal_movable_type.jpg
   :width: 100%
   :figwidth: 33%
   :alt: Movable Type
   :align: right

   Metal Movable Type, by Willi Heidelbach.

   Via `WikiMedia Commons
   <https://commons.wikimedia.org/wiki/File:Metal_movable_type.jpg>`__

reStructuredText is a plaintext markup
developed by people who write documentation as their primary job.
As described in
`the project goals
<http://docutils.sourceforge.net/docs/ref/rst/introduction.html#goals>`__,
the desire was "to design a markup syntax [...] that is readable and simple,
yet powerful enough for non-trivial use."
This is a markup that can comfortably handle a large range of tasks
which frustrate the simpler systems and yet it retains the direct utility
of a markup based on easy-to-read plain text.

.. figure:: 180px-Garamond_type_ft-ligature.jpg
   :width: 100%
   :figwidth: 25%
   :alt: Ligature in Garamond type
   :align: left
   :target: https://commons.wikimedia.org/wiki/File:Garamond_type_ft-ligature.jpg

   ft-ligature type in 12p Garamond

   Photo by Daniel Ullrich

   Also via `WikiMedia Commons
   <https://commons.wikimedia.org/wiki/File:Garamond_type_ft-ligature.jpg>`__

.. class:: sidebar narrow

.. [*] This is a sidenote.

Frankly, for some Hugo-based blogs, reStructuredText may be overkill.
But others may crave a clean solution
that can :sup:`superscript` and :sub:`subscript` without calling out to LaTeX.
One that handles inline images (|inlineimage|).
One that understands the difference between a `pull-quote`_ and `epigraphs`_.
One that wraps text around images flushed either to the right or the left,
and supports more formal figures when images need annotations.
One that also manages citations [ReST]_, footnotes\ [#]_,
and even sidenotes\ [*]_ expertly,
One that can also enable sidebars to handle related thoughts.
All in human-readable plain-text markup,
without new Hugo codewords, or additional helper projects.

.. |INLINEIMAGE| image:: biohazard.png

.. sidebar:: reStructuredText

   "reStructuredText is an easy-to-read,
   what-you-see-is-what-you-get plaintext markup syntax and parser system.
   It is useful for in-line program documentation (such as Python docstrings),
   for quickly creating simple web pages, and for standalone documents."
   From http://docutils.sourceforge.net/rst.html

This :title:`Hugo Restructured` theme works with the HTML generated by
the Docutils package that is supported within Hugo's additional helpers.
The templates in this theme provide straightforward display of articles,
and the CSS provided understands all of the features of the generated HTML.

Predictably, demonstrating too many features within a short webpage
leads to overly cluttered looking results.
Nevertheless, it is hoped this sample still offers an intriguing taste
of what can be done with reStructuredText in Hugo.


.. _epigraphs:

.. epigraph::

   Everything should be as simple as it can be, but not simpler.

   -- Albert Einstein as quoted by Roger Sessions, 1950.

   Make it easy to read.

   -- Roger Black


.. sidebar:: reStructuredText's Goals

   [...] here are specific design goals, in order, beginning with the most important:

   #. Readable. The marked-up text must be easy to read without any prior knowledge of the markup language. It should be as easily read in raw form as in processed form.
   #. Unobtrusive. The markup that is used should be as simple and unobtrusive as possible. The simplicity of markup constructs should be roughly proportional to their frequency of use. The most common constructs, with natural and obvious markup, should be the simplest and most unobtrusive. Less common constructs, for which there is no natural or obvious markup, should be distinctive.
   #. Unambiguous. The rules for markup must not be open for interpretation. For any given input, there should be one and only one possible output (including error output).
   #. Unsurprising. Markup constructs should not cause unexpected output upon processing. As a fallback, there must be a way to prevent unwanted markup processing when a markup construct is used in a non-markup context (for example, when documenting the markup syntax itself).
   #. Intuitive. Markup should be as obvious and easily remembered as possible, for the author as well as for the reader. Constructs should take their cues from such naturally occurring sources as plaintext email messages, newsgroup postings, and text documentation such as README.txt files.
   #. Easy. It should be easy to mark up text using any ordinary text editor.
   #. Scalable. The markup should be applicable regardless of the length of the text.
   #. Powerful. The markup should provide enough constructs to produce a reasonably rich structured document.
   #. Language-neutral. The markup should apply to multiple natural (as well as artificial) languages, not only English.
   #. Extensible. The markup should provide a simple syntax and interface for adding more complex general markup, and custom markup.
   #. Output-format-neutral. The markup will be appropriate for processing to multiple output formats, and will not be biased toward any particular format.

   |---| From http://docutils.sourceforge.net/docs/ref/rst/introduction.html

Why reStructuredText
********************

Hugo, with the
`Blackfriday <https://gohugo.io/getting-started/configuration/#configure-blackfriday>`__
markdown processor is already
a powerful system, why then should one bother with something
beyond the default configuration?
`Blackfriday's extensions <https://github.com/russross/blackfriday#extensions>`__
support features like footnotes.
Hugo's shortcodes can implement other features like figures.
Why not work with these features?

*Because* reStructuredText supports most, if not all,
of these same features |--| but does so
in a single, mature, consistent system that is in wide use
for projects that scale up to even some of the most sophisticated
documentation systems.

Rather than live with several different sets of implementations
across several layers of the Hugo stack,
take advantage of a supported input markup
that was designed to do all of this within one well thought out system.

.. tip::
   :class: sidebar narrow align-left

   Over use of too many ReST features,
   like this,
   in tight areas leads to ugly pages.

*Because* reStructuredText is both scalable and extensible,
the degree of support it offers for many of these features
is far more robust than many other solutions.
One example above covers reStructuredText's support not just for footnotes,
but also sidenotes and a parallel citations reference system.
In the same vein, there is not just one table syntax,
there are
`three different ways to build tables <http://docutils.sourceforge.net/docs/ref/rst/directives.html#tables>`__
in markup.
Again showing depth of implementation,
reStructuredText supports both
`bare images <http://docutils.sourceforge.net/docs/ref/rst/directives.html#images>`__
as well as
`figures <http://docutils.sourceforge.net/docs/ref/rst/directives.html#figure>`__
that have legends |--| legends that can have within all manner
of markup: citations, quotations, even tables.
Similarly, reStructuredText has several forms of blockquotes,
enabling different display styles from an attention-grabbing
`pull-quote <http://docutils.sourceforge.net/docs/ref/rst/directives.html#pull-quote>`__
to a more understated
`epigraph <http://docutils.sourceforge.net/docs/ref/rst/directives.html#epigraph>`__.

*Also because* since reStructuredText follows a consistent design,
it is possible to create a Hugo-centric CSS that
allows useful concepts to be applied to whole ranges of elements.
With this system, not only is it possible to flush an image
over to the left or the right and have the main text wrap around,
that same treatment can be applied to all sorts of elements
from tables-of-contents to pull-quotes or 'warning' admonitions.

Some of the differences come from attention to details.
Since reStructuredText is careful about the kind of HTML that it
generates, there is greater support for the semantic-web features in HTML.
For example, most web browsers use
the same italics-based method of display for
``<EM>`` and ``<CITE>`` tags in HTML
so it often doesn't matter whether a string was
italicized for *emphasis* or for :title:`citation`,
but reStructuredText does know the difference
and enables an author to write material that will be better recognized
by a semantic browser.

On a related note,
because the underlying HTML takes care to be correct,
:title:`Hugo Restructured` is setup to load and utilize explicitly
particular weights and styles for the typeface used.
So a page's *italics* will be rendered
with the best oblique slanting the type designer could define
rather than a browser's attempt to tilt each character on the fly |--|
and the **bold** will be loud and proud, not just big and blurry.


End Thought
***********

There are ways to accomplish most of the same features in other Hugo setups.
For those who may appreciate the difference,
the use of reStructuredText enables :title:`Hugo Restructured` to offer all
of these features within one stable, self-consistent system.


....

.. [#] Yes, this is a footnote.  The label of this footnote contains
   a link to return back to the footnote reference.

.. [ReST] :title:`reStructuredText Documentation`,
   http://docutils.sourceforge.net/rst.html


.. |---| unicode:: U+02014 .. em dash
.. |--| unicode:: U+2013   .. en dash

